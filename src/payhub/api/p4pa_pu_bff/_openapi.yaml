openapi: 3.1.0
info:
  title: p4pa-pu-bff
  description: Api and Models
  version: 0.0.1
servers:
  - url: http://localhost
    description: Generated server url
security:
  - BearerAuth: []
tags:
  - name: PaymentsReporting
    description: the PaymentsReporting API
  - name: IngestionFlowFiles
    description: the IngestionFlowFiles API
  - name: Installments
    description: the Installments API
  - name: Taxonomy
    description: the Taxonomy API
  - name: Monitoring
    description: the Monitoring API
  - name: DebtPositionTypes
    description: the DebtPositionTypes API
  - name: Transfers
    description: the Transfers API
  - name: ExportFiles
    description: the ExportFiles API
  - name: DebtPositionTypeOrgs
    description: the DebtPositionTypeOrgs API
  - name: DebtPositions
    description: the DebtPositions API
  - name: Brokers
    description: the Brokers API
  - name: Receipts
    description: the Receipts API
  - name: Treasuries
    description: the Treasuries API
  - name: Organizations
    description: the Organizations API
  - name: Authentication
    description: the Authentication API
paths:
  /bff/token:
    post:
      tags:
        - Authentication
      summary: Generate an access token
      operationId: postToken
      parameters:
        - name: idToken
          in: query
          description: ID token from the client
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Access Token generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
      security: []
  /bff/export-flow-files:
    post:
      tags:
        - ExportFiles
      summary: create-export-file
      operationId: createExportFile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportFileRequestDTO'
        required: true
      responses:
        '201':
          description: OK
      security:
        - BearerAuth: []
  /bff/taxonomy/getTaxonomyCode:
    get:
      tags:
        - Taxonomy
      operationId: getTaxonomyCode
      parameters:
        - name: organizationType
          in: query
          required: false
          schema:
            type: string
        - name: macroAreaCode
          in: query
          required: false
          schema:
            type: string
        - name: serviceTypeCode
          in: query
          required: false
          schema:
            type: string
        - name: collectionReason
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaxonomyCodeDTO'
      security:
        - BearerAuth: []
  /bff/taxonomy/getServiceType:
    get:
      tags:
        - Taxonomy
      operationId: getServiceType
      parameters:
        - name: organizationType
          in: query
          required: false
          schema:
            type: string
        - name: macroAreaCode
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaxonomyServiceTypeCodeDTO'
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaxonomyServiceTypeCodeDTO'
        '403':
          description: Forbidden - Access denied
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaxonomyServiceTypeCodeDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaxonomyServiceTypeCodeDTO'
      security:
        - BearerAuth: []
  /bff/taxonomy/getOrganizationTypes:
    get:
      tags:
        - Taxonomy
      summary: Retrieve distinct organization types for FE
      operationId: getOrganizationTypes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaxonomyOrganizationTypeDTO'
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaxonomyOrganizationTypeDTO'
        '403':
          description: Forbidden - Access denied
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaxonomyOrganizationTypeDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaxonomyOrganizationTypeDTO'
      security:
        - BearerAuth: []
  /bff/taxonomy/getMacroArea:
    get:
      tags:
        - Taxonomy
      operationId: getMacroArea
      parameters:
        - name: organizationType
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaxonomyMacroAreaCodeDTO'
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaxonomyMacroAreaCodeDTO'
        '403':
          description: Forbidden - Access denied
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaxonomyMacroAreaCodeDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaxonomyMacroAreaCodeDTO'
      security:
        - BearerAuth: []
  /bff/taxonomy/getCollectionReason:
    get:
      tags:
        - Taxonomy
      operationId: getCollectionReason
      parameters:
        - name: organizationType
          in: query
          required: false
          schema:
            type: string
        - name: macroAreaCode
          in: query
          required: false
          schema:
            type: string
        - name: serviceTypeCode
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaxonomyCollectionReasonDTO'
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaxonomyCollectionReasonDTO'
        '403':
          description: Forbidden - Access denied
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaxonomyCollectionReasonDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaxonomyCollectionReasonDTO'
      security:
        - BearerAuth: []
  /bff/organizations:
    get:
      tags:
        - Organizations
      summary: Retrieve the list of organizations
      operationId: getOrganizations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationDTO'
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationDTO'
        '403':
          description: Forbidden - Access denied
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
      security:
        - BearerAuth: []
  /bff/organization/{organizationId}/treasuries:
    get:
      tags:
        - Treasuries
      summary: Retrieve a paged list of treasuries based on filters
      operationId: getTreasuries
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: iuv
          in: query
          required: false
          schema:
            type: string
        - name: iuf
          in: query
          required: false
          schema:
            type: string
        - name: billAmountCents
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: billDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: provisionalCode
          in: query
          required: false
          schema:
            type: string
        - name: billCode
          in: query
          required: false
          schema:
            type: string
        - name: pspLastName
          in: query
          required: false
          schema:
            type: string
        - name: regionValueDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: documentCode
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedTreasuryView'
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedTreasuryView'
        '403':
          description: Forbidden - Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedTreasuryView'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedTreasuryView'
      security:
        - BearerAuth: []
  /bff/organization/{organizationId}/treasuries/{treasuryId}:
    get:
      tags:
        - Treasuries
      summary: Retrieve a specific treasury
      operationId: getTreasuryDetail
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: treasuryId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Treasury'
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Treasury'
        '403':
          description: Forbidden - Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Treasury'
        '404':
          description: Not Found - Receipt not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Treasury'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Treasury'
      security:
        - BearerAuth: []
  /bff/organization/{organizationId}/transfers:
    get:
      tags:
        - Transfers
      summary: Retrieve a list of transfers
      operationId: getTransfers
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: installmentId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransferResponse'
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransferResponse'
        '403':
          description: Forbidden - Access denied
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransferResponse'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransferResponse'
      security:
        - BearerAuth: []
  /bff/organization/{organizationId}/receipts:
    get:
      tags:
        - Receipts
      summary: Retrieve a page of receipts based on filters
      operationId: getReceipts
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: receiptOrigin
          in: query
          required: true
          schema:
            type: string
            enum:
              - RECEIPT_PAGOPA
              - RECEIPT_FILE
              - PAYMENTS_REPORTING
        - name: iuv
          in: query
          required: false
          schema:
            type: string
        - name: iur
          in: query
          required: false
          schema:
            type: string
        - name: iud
          in: query
          required: false
          schema:
            type: string
        - name: debtPositionTypeOrgId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: paymentDateTimeFrom
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentDateTimeTo
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedReceiptView'
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedReceiptView'
        '403':
          description: Forbidden - Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedReceiptView'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedReceiptView'
      security:
        - BearerAuth: []
  /bff/organization/{organizationId}/receipts/{receiptId}:
    get:
      tags:
        - Receipts
      summary: Retrieve a specific receipt
      operationId: getReceiptDetail
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: receiptId
          in: path
          description: The unique identifier of the receipt
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceiptDetailDTO'
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceiptDetailDTO'
        '403':
          description: Forbidden - Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceiptDetailDTO'
        '404':
          description: Not Found - Receipt not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceiptDetailDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
      security:
        - BearerAuth: []
  /bff/organization/{organizationId}/payments-reporting:
    get:
      tags:
        - PaymentsReporting
      summary: Retrieve a paged list of payments reporting based on filters
      operationId: getPaymentsReporting
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: iuf
          in: query
          required: false
          schema:
            type: string
        - name: regulationUniqueIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: regulationDateFrom
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: regulationDateTo
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedPaymentsReportingView'
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedPaymentsReportingView'
        '403':
          description: Forbidden - Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedPaymentsReportingView'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedPaymentsReportingView'
      security:
        - BearerAuth: []
  /bff/organization/{organizationId}/payments-reporting/{iuf}/rows:
    get:
      tags:
        - PaymentsReporting
      summary: Retrieve a page of payments reporting rows based on filters
      operationId: getPaymentsReportingRows
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: iuf
          in: path
          required: true
          schema:
            type: string
        - name: iuv
          in: query
          required: false
          schema:
            type: string
        - name: payDateFrom
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: payDateTo
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedPaymentsReportingRow'
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedPaymentsReportingRow'
        '403':
          description: Forbidden - Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedPaymentsReportingRow'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedPaymentsReportingRow'
      security:
        - BearerAuth: []
  /bff/organization/{organizationId}/payments-reporting/{iuf}/rows/{paymentsReportingId}:
    get:
      tags:
        - PaymentsReporting
      summary: Retrieve a specific payments reporting
      operationId: getPaymentsReportingDetail
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: iuf
          in: path
          required: true
          schema:
            type: string
        - name: paymentsReportingId
          in: path
          description: The unique identifier of the payments reporting
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsReportingDetailDTO'
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsReportingDetailDTO'
        '403':
          description: Forbidden - Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsReportingDetailDTO'
        '404':
          description: Not Found - Payments Reporting not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentsReportingDetailDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
      security:
        - BearerAuth: []
  /bff/organization/{organizationId}/installments:
    get:
      tags:
        - Installments
      summary: Retrieve a paged list of installment based on filters
      operationId: getInstallments
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: dueDateFrom
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: dueDateTo
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: iuv
          in: query
          required: false
          schema:
            type: string
        - name: fiscalCode
          in: query
          required: false
          schema:
            type: string
        - name: debtPositionTypeOrgId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedInstallmentView'
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedInstallmentView'
        '403':
          description: Forbidden - Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedInstallmentView'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedInstallmentView'
      security:
        - BearerAuth: []
  /bff/organization/{organizationId}/installments/{installmentId}:
    get:
      tags:
        - Installments
      summary: Retrieve a specific installment
      operationId: getInstallmentDetail
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: installmentId
          in: path
          description: The unique identifier of the installment
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstallmentDetailDTO'
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstallmentDetailDTO'
        '403':
          description: Forbidden - Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstallmentDetailDTO'
        '404':
          description: Not Found - Receipt not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstallmentDetailDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
      security:
        - BearerAuth: []
  /bff/organization/{organizationId}/ingestion-flow-files:
    get:
      tags:
        - IngestionFlowFiles
      operationId: getIngestionFlowFiles
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: flowFileTypes
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
              enum:
                - RECEIPT
                - RECEIPT_PAGOPA
                - PAYMENTS_REPORTING
                - PAYMENTS_REPORTING_PAGOPA
                - TREASURY_OPI
                - TREASURY_CSV
                - TREASURY_XLS
                - TREASURY_POSTE
                - DP_INSTALLMENTS
        - name: creationDateFrom
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: creationDateTo
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - UPLOADED
              - PROCESSING
              - COMPLETED
              - ERROR
        - name: fileName
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedIngestionFlowFile'
        '404':
          description: Not Found
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedIngestionFlowFile'
      security:
        - BearerAuth: []
  /bff/organization/{organizationId}/export-flow-files:
    get:
      tags:
        - ExportFiles
      operationId: getExportFiles
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: flowFileType
          in: query
          required: true
          schema:
            type: string
            enum:
              - PAID
              - CLASSIFICATIONS
              - PAYMENTS_REPORTING
        - name: creationDateFrom
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: creationDateTo
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - REQUESTED
              - PROCESSING
              - COMPLETED
              - EXPIRED
              - ERROR
        - name: fileName
          in: query
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedExportFile'
        '404':
          description: Not Found
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedExportFile'
      security:
        - BearerAuth: []
  /bff/organization/{organizationId}/debt-positions:
    get:
      tags:
        - DebtPositions
      summary: Retrieve a page of DebtPositionView
      operationId: getDebtPositionViews
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: creationDateFrom
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: creationDateTo
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: fiscalCode
          in: query
          required: false
          schema:
            type: string
        - name: debtPositionTypeOrgId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - TO_SYNC
              - REPORTED
              - PAID
              - PARTIALLY_PAID
              - CANCELLED
              - EXPIRED
              - UNPAID
              - DRAFT
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedDebtPositionView'
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedDebtPositionView'
        '403':
          description: Forbidden - Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedDebtPositionView'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedDebtPositionView'
      security:
        - BearerAuth: []
  /bff/organization/{organizationId}/debt-positions/{debtPositionId}:
    get:
      tags:
        - DebtPositions
      summary: Retrieve a specific DebtPosition
      operationId: getDebtPositionDetail
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: debtPositionId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtPositionDetailDTO'
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtPositionDetailDTO'
        '403':
          description: Forbidden - Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtPositionDetailDTO'
        '404':
          description: Not Found - DebtPosition not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtPositionDetailDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtPositionDetailDTO'
      security:
        - BearerAuth: []
  /bff/organization/{organizationId}/debt-position-types:
    get:
      tags:
        - DebtPositionTypes
      summary: Retrieve a page of DebtPositionTypeWithCount based on the organization's brokerId
      operationId: getDebtPositionTypeWithCount
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedDebtPositionTypeWithCount'
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedDebtPositionTypeWithCount'
        '403':
          description: Forbidden - Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedDebtPositionTypeWithCount'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedDebtPositionTypeWithCount'
      security:
        - BearerAuth: []
  /bff/organization/{organizationId}/debt-position-types/{debtPositionTypeId}:
    get:
      tags:
        - DebtPositionTypes
      summary: Retrieve a detail of a DebtPositionType based on the organization's brokerId
      operationId: getDebtPositionTypeDetail
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: debtPositionTypeId
          in: path
          description: The ID of the debt position type
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtPositionTypeDetailDTO'
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtPositionTypeDetailDTO'
        '403':
          description: Forbidden - Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtPositionTypeDetailDTO'
        '404':
          description: Not Found - Debt Position Type not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtPositionTypeDetailDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtPositionTypeDetailDTO'
      security:
        - BearerAuth: []
  /bff/organization/{organizationId}/debt-position-type-orgs:
    get:
      tags:
        - DebtPositionTypeOrgs
      summary: Retrieve a list of DebtPositionTypeOrg
      operationId: getDebtPositionTypeOrgs
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DebtPositionTypeOrg'
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DebtPositionTypeOrg'
        '403':
          description: Forbidden - Access denied
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DebtPositionTypeOrg'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DebtPositionTypeOrg'
      security:
        - BearerAuth: []
  /bff/debt-position-types/{id}:
    get:
      tags:
        - DebtPositionTypes
      summary: Retrieve a specific debt position type
      operationId: getDebtPositionType
      parameters:
        - name: id
          in: path
          description: The unique identifier of the debt position type
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtPositionType'
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtPositionType'
        '403':
          description: Forbidden - Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtPositionType'
        '404':
          description: Not Found - Debt position type not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtPositionType'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DebtPositionType'
      security:
        - BearerAuth: []
  /bff/core-health:
    get:
      tags:
        - Monitoring
      operationId: getHealthStatus
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceStatus'
        '503':
          description: Service is unavailable
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceStatus'
      security: []
  /bff/brokers/config:
    get:
      tags:
        - Brokers
      summary: Retrieve application information for FE
      operationId: getBrokerConfig
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigFE'
        '401':
          description: Unauthorized - Missing or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigFE'
        '403':
          description: Forbidden - Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigFE'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigFE'
      security:
        - BearerAuth: []
components:
  schemas:
    AccessToken:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string
        expires_in:
          type: integer
          format: int32
      required:
        - access_token
        - expires_in
        - token_type
    ExportFileFilter:
      type: object
      properties:
        iuf:
          type: string
        iuv:
          type: string
        iur:
          type: string
        debtPositionTypeCode:
          type: string
        label:
          type: string
        lastClassificationDate:
          $ref: '#/components/schemas/LocalDateIntervalFilter'
        regulationDate:
          $ref: '#/components/schemas/LocalDateIntervalFilter'
        billDate:
          $ref: '#/components/schemas/LocalDateIntervalFilter'
        regionValueDate:
          $ref: '#/components/schemas/LocalDateIntervalFilter'
        debtorUniqueIdentifierCode:
          type: string
        payerUniqueIdentifierCode:
          type: string
        pspLastName:
          type: string
        accountRegistryCode:
          type: string
        billAmountCents:
          type: string
        paymentDate:
          $ref: '#/components/schemas/LocalDateIntervalFilter'
        debtPositionTypeOrgId:
          type: integer
          format: int64
    ExportFileRequestDTO:
      type: object
      properties:
        organizationId:
          type: integer
          format: int64
        flowFileType:
          type: string
          enum:
            - PAID
            - CLASSIFICATIONS
            - PAYMENTS_REPORTING
        flowFileVersion:
          type: string
        filterFields:
          $ref: '#/components/schemas/ExportFileFilter'
      required:
        - filterFields
        - flowFileType
        - flowFileVersion
        - organizationId
    LocalDateIntervalFilter:
      type: object
      properties:
        from:
          type: string
          format: date
        to:
          type: string
          format: date
    TaxonomyCodeDTO:
      type: object
      properties:
        organizationType:
          type: string
        organizationTypeDescription:
          type: string
        macroAreaCode:
          type: string
        macroAreaName:
          type: string
        macroAreaDescription:
          type: string
        serviceTypeCode:
          type: string
        serviceType:
          type: string
        serviceTypeDescription:
          type: string
        collectionReason:
          type: string
        taxonomyCode:
          type: string
    TaxonomyServiceTypeCodeDTO:
      type: object
      properties:
        organizationType:
          type: string
        organizationTypeDescription:
          type: string
        macroAreaCode:
          type: string
        macroAreaName:
          type: string
        macroAreaDescription:
          type: string
        serviceTypeCode:
          type: string
        serviceType:
          type: string
        serviceTypeDescription:
          type: string
    TaxonomyOrganizationTypeDTO:
      type: object
      properties:
        organizationType:
          type: string
        organizationTypeDescription:
          type: string
    TaxonomyMacroAreaCodeDTO:
      type: object
      properties:
        organizationType:
          type: string
        organizationTypeDescription:
          type: string
        macroAreaCode:
          type: string
        macroAreaName:
          type: string
        macroAreaDescription:
          type: string
    TaxonomyCollectionReasonDTO:
      type: object
      properties:
        organizationType:
          type: string
        organizationTypeDescription:
          type: string
        macroAreaCode:
          type: string
        macroAreaName:
          type: string
        macroAreaDescription:
          type: string
        serviceTypeCode:
          type: string
        serviceType:
          type: string
        serviceTypeDescription:
          type: string
        collectionReason:
          type: string
    OrganizationDTO:
      type: object
      properties:
        organizationId:
          type: integer
          format: int64
          description: Organization ID
        ipaCode:
          type: string
          description: IPA code of the organization
        orgName:
          type: string
          description: Organization name
        operatorRole:
          type: string
          description: Operator role
          enum:
            - ROLE_ADMIN
            - ROLE_OPER
        orgLogo:
          type: string
          description: Base64 encoded logo of the organization
        orgFiscalCode:
          type: string
      required:
        - ipaCode
        - operatorRole
        - orgFiscalCode
        - orgName
        - organizationId
    ErrorDTO:
      type: object
      properties:
        title:
          type: string
          description: The title describing the error
          enum:
            - NOT_FOUND
            - BAD_REQUEST
            - GENERIC_ERROR
        description:
          type: string
          description: Description of the error
      required:
        - description
        - title
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
    PagedTreasuryView:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/TreasuryView'
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
      required:
        - content
        - number
        - size
        - totalElements
        - totalPages
    TreasuryView:
      type: object
      properties:
        treasuryId:
          type: string
        organizationId:
          type: integer
          format: int64
        billYear:
          type: string
        billCode:
          type: string
        regionValueDate:
          type: string
          format: date
        billDate:
          type: string
          format: date
        iuf:
          type: string
        billAmountCents:
          type: integer
          format: int64
        iuv:
          type: string
        provisionalCode:
          type: string
        pspLastName:
          type: string
        documentCode:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Link'
      required:
        - billAmountCents
        - billCode
        - billDate
        - billYear
        - organizationId
        - pspLastName
        - treasuryId
    Treasury:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        updateDate:
          type: string
          format: date-time
        updateOperatorExternalId:
          type: string
        treasuryId:
          type: string
        billYear:
          type: string
        billCode:
          type: string
        ingestionFlowFileId:
          type: integer
          format: int64
        organizationId:
          type: integer
          format: int64
        iuf:
          type: string
        iuv:
          type: string
        accountCode:
          type: string
        domainIdCode:
          type: string
        transactionTypeCode:
          type: string
        remittanceCode:
          type: string
        remittanceDescription:
          type: string
        billAmountCents:
          type: integer
          format: int64
        billDate:
          type: string
          format: date
        receptionDate:
          type: string
          format: date-time
        documentYear:
          type: string
        documentCode:
          type: string
        sealCode:
          type: string
        pspLastName:
          type: string
        pspFirstName:
          type: string
        pspAddress:
          type: string
        pspPostalCode:
          type: string
        pspCity:
          type: string
        pspFiscalCode:
          type: string
        pspVatNumber:
          type: string
        abiCode:
          type: string
        cabCode:
          type: string
        ibanCode:
          type: string
        accountRegistryCode:
          type: string
        provisionalAe:
          type: string
        provisionalCode:
          type: string
        accountTypeCode:
          type: string
        processCode:
          type: string
        executionPgCode:
          type: string
        transferPgCode:
          type: string
        processPgNumber:
          type: integer
          format: int64
        regionValueDate:
          type: string
          format: date
        actualSuspensionDate:
          type: string
          format: date
        managementProvisionalCode:
          type: string
        endToEndId:
          type: string
        regularized:
          type: boolean
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Link'
      required:
        - billAmountCents
        - billCode
        - billDate
        - billYear
        - ingestionFlowFileId
        - organizationId
        - pspLastName
    Stamp:
      type: object
      properties:
        stampType:
          type: string
        stampHashDocument:
          type: string
        stampProvincialResidence:
          type: string
    TransferResponse:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        updateDate:
          type: string
          format: date-time
        updateOperatorExternalId:
          type: string
        transferId:
          type: integer
          format: int64
        installmentId:
          type: integer
          format: int64
        orgFiscalCode:
          type: string
        orgName:
          type: string
        amountCents:
          type: integer
          format: int64
        remittanceInformation:
          type: string
        stamp:
          $ref: '#/components/schemas/Stamp'
        iban:
          type: string
        postalIban:
          type: string
        category:
          type: string
        transferIndex:
          type: integer
          format: int32
      required:
        - amountCents
        - category
        - installmentId
        - orgFiscalCode
        - remittanceInformation
        - transferIndex
    PagedReceiptView:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ReceiptView'
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
      required:
        - content
        - number
        - size
        - totalElements
        - totalPages
    ReceiptView:
      type: object
      properties:
        receiptId:
          type: integer
          format: int64
        paymentAmountCents:
          type: integer
          format: int64
        paymentDateTime:
          type: string
          format: date-time
        installmentId:
          type: integer
          format: int64
        receiptOrigin:
          type: string
          enum:
            - RECEIPT_PAGOPA
            - RECEIPT_FILE
            - PAYMENTS_REPORTING
        iuv:
          type: string
        debtPositionTypeOrgDescription:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Link'
      required:
        - debtPositionTypeOrgDescription
        - installmentId
        - paymentAmountCents
        - receiptOrigin
    PersonDTO:
      type: object
      properties:
        entityType:
          type: string
          enum:
            - F
            - G
        fiscalCode:
          type: string
        fullName:
          type: string
        address:
          type: string
        civic:
          type: string
        postalCode:
          type: string
        location:
          type: string
        province:
          type: string
        nation:
          type: string
        email:
          type: string
      required:
        - entityType
        - fiscalCode
        - fullName
    ReceiptDetailDTO:
      type: object
      properties:
        receiptId:
          type: integer
          format: int64
        iuv:
          type: string
        paymentAmountCents:
          type: integer
          format: int64
        remittanceInformation:
          type: string
        debtPositionTypeOrgDescription:
          type: string
        debtor:
          $ref: '#/components/schemas/PersonDTO'
        payer:
          $ref: '#/components/schemas/PersonDTO'
        paymentDateTime:
          type: string
          format: date-time
        pspCompanyName:
          type: string
        iud:
          type: string
        iur:
          type: string
      required:
        - debtPositionTypeOrgDescription
        - debtor
        - iud
        - paymentAmountCents
        - pspCompanyName
        - receiptId
        - remittanceInformation
    PagedPaymentsReportingView:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/PaymentsReportingView'
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
      required:
        - content
        - number
        - size
        - totalElements
        - totalPages
    PaymentsReportingView:
      type: object
      properties:
        ingestionFlowFileId:
          type: integer
          format: int64
        organizationId:
          type: integer
          format: int64
        iuf:
          type: string
        regulationUniqueIdentifier:
          type: string
        regulationDate:
          type: string
          format: date
        flowDateTime:
          type: string
          format: date-time
        totalPayments:
          type: integer
          format: int64
        totalAmountCents:
          type: integer
          format: int64
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Link'
      required:
        - flowDateTime
        - ingestionFlowFileId
        - iuf
        - organizationId
        - regulationDate
        - regulationUniqueIdentifier
        - totalAmountCents
        - totalPayments
    PagedPaymentsReportingRow:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/PaymentsReporting'
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
      required:
        - content
        - number
        - size
        - totalElements
        - totalPages
    PaymentsReporting:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        updateDate:
          type: string
          format: date-time
        updateOperatorExternalId:
          type: string
        paymentsReportingId:
          type: string
        ingestionFlowFileId:
          type: integer
          format: int64
        organizationId:
          type: integer
          format: int64
        iuv:
          type: string
        iur:
          type: string
        transferIndex:
          type: integer
          format: int32
        pspIdentifier:
          type: string
        iuf:
          type: string
        flowDateTime:
          type: string
          format: date-time
        regulationUniqueIdentifier:
          type: string
        regulationDate:
          type: string
          format: date
        senderPspType:
          type: string
        senderPspCode:
          type: string
        senderPspName:
          type: string
        receiverOrganizationType:
          type: string
        receiverOrganizationCode:
          type: string
        receiverOrganizationName:
          type: string
        totalPayments:
          type: integer
          format: int64
        totalAmountCents:
          type: integer
          format: int64
        amountPaidCents:
          type: integer
          format: int64
        paymentOutcomeCode:
          type: string
        payDate:
          type: string
          format: date
        acquiringDate:
          type: string
          format: date
        bicCodePouringBank:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Link'
      required:
        - acquiringDate
        - amountPaidCents
        - flowDateTime
        - ingestionFlowFileId
        - iuf
        - iur
        - iuv
        - organizationId
        - payDate
        - paymentOutcomeCode
        - pspIdentifier
        - regulationDate
        - regulationUniqueIdentifier
        - senderPspCode
        - senderPspType
        - totalAmountCents
        - totalPayments
        - transferIndex
    PaymentsReportingDetailDTO:
      type: object
      properties:
        paymentsReportingId:
          type: string
        iuv:
          type: string
        amountPaidCents:
          type: integer
          format: int64
        remittanceInformation:
          type: string
        debtPositionTypeOrgDescription:
          type: string
        paymentDateTime:
          type: string
          format: date-time
        debtor:
          $ref: '#/components/schemas/PersonDTO'
        pspCompanyName:
          type: string
        iud:
          type: string
        iur:
          type: string
        status:
          type: string
          enum:
            - TO_SYNC
            - REPORTED
            - PAID
            - CANCELLED
            - INVALID
            - EXPIRED
            - UNPAID
            - UNPAYABLE
            - DRAFT
      required:
        - amountPaidCents
        - iur
        - iuv
        - paymentsReportingId
    InstallmentView:
      type: object
      properties:
        installmentId:
          type: integer
          format: int64
        paymentOptionId:
          type: integer
          format: int64
        iuv:
          type: string
        status:
          type: string
          enum:
            - TO_SYNC
            - REPORTED
            - PAID
            - CANCELLED
            - INVALID
            - EXPIRED
            - UNPAID
            - UNPAYABLE
            - DRAFT
        dueDate:
          type: string
          format: date-time
        amountCents:
          type: integer
          format: int64
        remittanceInformation:
          type: string
        debtorFiscalCodeHash:
          type: string
          format: byte
        debtPositionTypeOrgDescription:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Link'
      required:
        - amountCents
        - debtPositionTypeOrgDescription
        - debtorFiscalCodeHash
        - paymentOptionId
        - remittanceInformation
        - status
    PagedInstallmentView:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/InstallmentView'
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
      required:
        - content
        - number
        - size
        - totalElements
        - totalPages
    InstallmentDetailDTO:
      type: object
      properties:
        installmentId:
          type: integer
          format: int64
        receiptId:
          type: integer
          format: int64
        paymentOptionId:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - TO_SYNC
            - REPORTED
            - PAID
            - CANCELLED
            - INVALID
            - EXPIRED
            - UNPAID
            - UNPAYABLE
            - DRAFT
        iuv:
          type: string
        amountCents:
          type: integer
          format: int64
        dueDate:
          type: string
          format: date
        debtor:
          $ref: '#/components/schemas/PersonDTO'
        debtPositionTypeOrgDescription:
          type: string
        debtPositionDescription:
          type: string
        debtPositionId:
          type: integer
          format: int64
        paymentDateTime:
          type: string
          format: date-time
        payer:
          $ref: '#/components/schemas/PersonDTO'
        pspCompanyName:
          type: string
        iud:
          type: string
        iur:
          type: string
      required:
        - amountCents
        - debtPositionDescription
        - debtPositionId
        - debtPositionTypeOrgDescription
        - debtor
        - dueDate
        - installmentId
        - iuv
        - status
    IngestionFlowFile:
      type: object
      properties:
        ingestionFlowFileId:
          type: integer
          format: int64
        fileName:
          type: string
        creationDate:
          type: string
          format: date-time
        operator:
          type: string
        totalRows:
          type: integer
          format: int64
        correctlyImportedRows:
          type: integer
          format: int64
        discardedRows:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - UPLOADED
            - PROCESSING
            - COMPLETED
            - ERROR
      required:
        - creationDate
        - fileName
        - ingestionFlowFileId
        - operator
        - status
    PagedIngestionFlowFile:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/IngestionFlowFile'
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
      required:
        - content
        - number
        - size
        - totalElements
        - totalPages
    ExportFile:
      type: object
      properties:
        exportFileId:
          type: integer
          format: int64
        fileName:
          type: string
        creationDate:
          type: string
          format: date-time
        totalRows:
          type: integer
          format: int64
        operator:
          type: string
        status:
          type: string
          enum:
            - REQUESTED
            - PROCESSING
            - COMPLETED
            - EXPIRED
            - ERROR
      required:
        - creationDate
        - exportFileId
        - fileName
        - operator
        - status
    PagedExportFile:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ExportFile'
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
      required:
        - content
        - number
        - size
        - totalElements
        - totalPages
    DebtPositionView:
      type: object
      properties:
        debtPositionId:
          type: integer
          format: int64
        description:
          type: string
        debtPositionTypeOrgDescription:
          type: string
        creationDate:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - TO_SYNC
            - REPORTED
            - PAID
            - PARTIALLY_PAID
            - CANCELLED
            - EXPIRED
            - UNPAID
            - DRAFT
        debtPositionOrigin:
          type: string
          enum:
            - ORDINARY
            - ORDINARY_SIL
            - SPONTANEOUS
            - SECONDARY_ORG
            - RECEIPT_FILE
            - RECEIPT_PAGOPA
            - REPORTING_PAGOPA
        debtPositionTypeOrgId:
          type: integer
          format: int64
        organizationId:
          type: integer
          format: int64
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Link'
      required:
        - debtPositionOrigin
        - debtPositionTypeOrgDescription
        - debtPositionTypeOrgId
        - organizationId
        - status
    PagedDebtPositionView:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/DebtPositionView'
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
      required:
        - content
        - number
        - size
        - totalElements
        - totalPages
    DebtPositionDetailDTO:
      type: object
      properties:
        debtor:
          $ref: '#/components/schemas/PersonDTO'
        debtPositionTypeOrgDescription:
          type: string
        debtPositionTypeOrgCode:
          type: string
        iupd:
          type: string
        status:
          type: string
          enum:
            - TO_SYNC
            - REPORTED
            - PAID
            - PARTIALLY_PAID
            - CANCELLED
            - EXPIRED
            - UNPAID
            - DRAFT
        paymentOptions:
          type: array
          items:
            $ref: '#/components/schemas/PaymentOptionDTO'
      required:
        - debtPositionTypeOrgCode
        - debtPositionTypeOrgDescription
        - debtor
        - paymentOptions
        - status
    InstallmentDTO:
      type: object
      properties:
        installmentId:
          type: integer
          format: int64
        paymentOptionId:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - TO_SYNC
            - REPORTED
            - PAID
            - CANCELLED
            - INVALID
            - EXPIRED
            - UNPAID
            - UNPAYABLE
            - DRAFT
        syncStatus:
          $ref: '#/components/schemas/InstallmentSyncStatus'
        iupdPagopa:
          type: string
        iud:
          type: string
        iuv:
          type: string
        iur:
          type: string
        iuf:
          type: string
        nav:
          type: string
        dueDate:
          type: string
          format: date
        notificationFeeCents:
          type: integer
          format: int64
        amountCents:
          type: integer
          format: int64
        remittanceInformation:
          type: string
        balance:
          type: string
        legacyPaymentMetadata:
          type: string
        debtor:
          $ref: '#/components/schemas/PersonDTO'
        transfers:
          type: array
          items:
            $ref: '#/components/schemas/TransferDTO'
        notificationDate:
          type: string
          format: date-time
        ingestionFlowFileId:
          type: integer
          format: int64
        ingestionFlowFileLineNumber:
          type: integer
          format: int64
        receiptId:
          type: integer
          format: int64
        creationDate:
          type: string
          format: date-time
        updateDate:
          type: string
          format: date-time
      required:
        - amountCents
        - debtor
        - remittanceInformation
        - transfers
    InstallmentSyncStatus:
      type: object
      properties:
        syncStatusFrom:
          type: string
          enum:
            - TO_SYNC
            - REPORTED
            - PAID
            - CANCELLED
            - INVALID
            - EXPIRED
            - UNPAID
            - UNPAYABLE
            - DRAFT
        syncStatusTo:
          type: string
          enum:
            - TO_SYNC
            - REPORTED
            - PAID
            - CANCELLED
            - INVALID
            - EXPIRED
            - UNPAID
            - UNPAYABLE
            - DRAFT
      required:
        - syncStatusFrom
        - syncStatusTo
    PaymentOptionDTO:
      type: object
      properties:
        paymentOptionId:
          type: integer
          format: int64
        debtPositionId:
          type: integer
          format: int64
        totalAmountCents:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - TO_SYNC
            - REPORTED
            - PAID
            - PARTIALLY_PAID
            - CANCELLED
            - INVALID
            - EXPIRED
            - UNPAID
            - UNPAYABLE
            - DRAFT
        description:
          type: string
        paymentOptionType:
          type: string
          enum:
            - SINGLE_INSTALLMENT
            - INSTALLMENTS
            - DOWN_PAYMENT
        paymentOptionIndex:
          type: integer
          format: int32
        installments:
          type: array
          items:
            $ref: '#/components/schemas/InstallmentDTO'
      required:
        - installments
        - paymentOptionType
        - totalAmountCents
    TransferDTO:
      type: object
      properties:
        transferId:
          type: integer
          format: int64
        installmentId:
          type: integer
          format: int64
        orgFiscalCode:
          type: string
        orgName:
          type: string
        amountCents:
          type: integer
          format: int64
        remittanceInformation:
          type: string
        stampType:
          type: string
        stampHashDocument:
          type: string
        stampProvincialResidence:
          type: string
        iban:
          type: string
        postalIban:
          type: string
        category:
          type: string
        transferIndex:
          type: integer
          format: int32
      required:
        - amountCents
        - category
        - orgFiscalCode
        - orgName
        - remittanceInformation
        - transferIndex
    DebtPositionTypeWithCount:
      type: object
      properties:
        debtPositionTypeId:
          type: integer
          format: int64
        code:
          type: string
        description:
          type: string
        updateDate:
          type: string
          format: date-time
        activeOrganizations:
          type: integer
          format: int32
      required:
        - activeOrganizations
        - code
        - debtPositionTypeId
        - description
        - updateDate
    PagedDebtPositionTypeWithCount:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/DebtPositionTypeWithCount'
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
      required:
        - content
        - number
        - size
        - totalElements
        - totalPages
    DebtPositionTypeDetailDTO:
      type: object
      properties:
        debtPositionTypeId:
          type: integer
          format: int64
        code:
          type: string
          maxLength: 255
          minLength: 0
        description:
          type: string
          readOnly: true
        organizationTypeDescription:
          type: string
          readOnly: true
        macroAreaName:
          type: string
          readOnly: true
        serviceType:
          type: string
          readOnly: true
        collectionReason:
          type: string
          readOnly: true
        taxonomyCode:
          type: string
          readOnly: true
        flagAnonymousFiscalCode:
          type: boolean
        flagMandatoryDueDate:
          type: boolean
        flagNotifyIo:
          type: boolean
        ioTemplateMessage:
          type: string
      required:
        - code
        - collectionReason
        - debtPositionTypeId
        - description
        - macroAreaName
        - organizationTypeDescription
        - serviceType
        - taxonomyCode
    DebtPositionTypeOrg:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        updateDate:
          type: string
          format: date-time
        updateOperatorExternalId:
          type: string
        debtPositionTypeOrgId:
          type: integer
          format: int64
        debtPositionTypeId:
          type: integer
          format: int64
        organizationId:
          type: integer
          format: int64
        balance:
          type: string
        code:
          type: string
        description:
          type: string
        iban:
          type: string
        postalIban:
          type: string
        postalAccountCode:
          type: string
        holderPostalCc:
          type: string
        orgSector:
          type: string
        xsdDefinitionRef:
          type: string
        amountCents:
          type: integer
          format: int64
        externalPaymentUrl:
          type: string
        flagAnonymousFiscalCode:
          type: boolean
        flagMandatoryDueDate:
          type: boolean
        flagSpontaneous:
          type: boolean
        flagNotifyIo:
          type: boolean
        serviceId:
          type: string
        ioTemplateSubject:
          type: string
        ioTemplateMessage:
          type: string
        flagActive:
          type: boolean
        flagNotifyOutcomePush:
          type: boolean
        notifyOutcomePushOrgSilServiceId:
          type: integer
          format: int64
        flagAmountActualization:
          type: boolean
        amountActualizationOrgSilServiceId:
          type: integer
          format: int64
        flagExternal:
          type: boolean
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Link'
      required:
        - code
        - debtPositionTypeId
        - description
        - iban
        - organizationId
    DebtPositionType:
      type: object
      properties:
        creationDate:
          type: string
          format: date-time
        updateDate:
          type: string
          format: date-time
        updateOperatorExternalId:
          type: string
        debtPositionTypeId:
          type: integer
          format: int64
        brokerId:
          type: integer
          format: int64
        code:
          type: string
        description:
          type: string
        orgType:
          type: string
        macroArea:
          type: string
        serviceType:
          type: string
        collectingReason:
          type: string
        taxonomyCode:
          type: string
        flagAnonymousFiscalCode:
          type: boolean
        flagMandatoryDueDate:
          type: boolean
        flagNotifyIo:
          type: boolean
        ioTemplateMessage:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Link'
      required:
        - brokerId
        - code
        - collectingReason
        - description
        - macroArea
        - orgType
        - serviceType
        - taxonomyCode
    ServiceStatus:
      type: object
      properties:
        serviceName:
          type: string
          description: Service Name
        statusMessage:
          type: string
          description: Service status
    ConfigFE:
      type: object
      properties:
        headerAssistanceUrl:
          type: string
          description: URL for header assistance
        logoFooterImg:
          type: string
          description: URL for footer logo image
        footerDescText:
          type: string
          description: Description text for the footer
        footerPrivacyInfoUrl:
          type: string
          description: URL for privacy information in the footer
        footerGDPRUrl:
          type: string
          description: URL for GDPR information in the footer
        footerTermsCondUrl:
          type: string
          description: URL for terms and conditions in the footer
        footerAccessibilityUrl:
          type: string
          description: URL for accessibility information in the footer
        brokerId:
          type: string
          description: Broker ID
        canManageUsers:
          type: boolean
          description: Indicates if the user can manage other users
        brokerFiscalCode:
          type: string
      required:
        - brokerFiscalCode
        - brokerId
        - canManageUsers
        - footerAccessibilityUrl
        - footerDescText
        - footerGDPRUrl
        - footerPrivacyInfoUrl
        - footerTermsCondUrl
        - headerAssistanceUrl
        - logoFooterImg
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
